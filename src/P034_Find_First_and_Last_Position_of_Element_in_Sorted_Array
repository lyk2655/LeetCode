/**
 * 34. Find First and Last Position of Element in Sorted Array
Medium

1285

68

Favorite

Share
Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.

Your algorithm's runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
思路:从前面开始遍历,如果命中,往下继续遍历.如果target < nums[i], 说明后面的都不满足,结束

*/


class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] result = {-1, -1};
        if(nums == null || nums.length == 0) {
            return result;
        }
        for( int i = 0; i < nums.length; i++) {
            if(nums[i] == target) {
                result[0] = i;
                result[1] = i;
                for(int k = i+1; k < nums.length; k++) {
                    if(nums[k] == target) {
                        result[1] = k;
                    } else {
                        break;
                    }
                }
                return result;
            } else if(target < nums[i]) {
                break;
            }
        }
        return result;
    }
}
